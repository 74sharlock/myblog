// Generated by CoffeeScript 1.9.3
(function() {
  module.exports = function(nodeScope) {
    var getContent, handler, showList, that, thisService;
    that = this;
    prettyPrint();
    showList = D('articleList');
    getContent = require('../../global/getContent.js');
    thisService = {
      link: function(target) {
        var catId, contentBlock, href, loading, self, title;
        if (!that.isShowing) {
          self = this;
          that.isShowing = true;
          loading = CE('div');
          loading.className = 'ui inverted dimmer transition visible active';
          loading.innerHTML = '<div class="ui active loader"></div>';
          contentBlock = this.Q('.this-content');
          contentBlock.appendChild(loading);
          href = target.href;
          title = target.title;
          catId = self.data('cat');
          return getContent.call(that, href, title, true, {}, function(content) {
            contentBlock.removeChild(loading);
            return require('../../global/showAnimation').apply(self, [contentBlock, catId, content]);
          }, {
            card: self.outerHTML
          });
        }
      },
      back: function(target) {
        var dataWaiter, href, title;
        title = target.data('title');
        href = target.href;
        dataWaiter = new (require('../../global/dataWaiter.js'))();
        dataWaiter.show();
        return getContent.call(that, href, title, false, function() {
          return dataWaiter.close();
        });
      }
    };
    handler = function(e) {
      var card, cards, i, len, method, target, thisCard;
      e.preventDefault();
      cards = showList.QA('.content-item');
      target = e.target;
      method = target.data('method');
      for (i = 0, len = cards.length; i < len; i++) {
        card = cards[i];
        if (card === target || card.contains(target)) {
          thisCard = card;
        }
      }
      if (thisCard && method) {
        return thisService[method].call(thisCard, target);
      }
    };
    if (showList) {
      return showList.on('click', handler);
    }
  };

}).call(this);

//# sourceMappingURL=content.js.map
